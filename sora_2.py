def generate_sora2_video(arguments):
    import os
    from openai import OpenAI
    from openai import PermissionDeniedError

    prompt = arguments["prompt"]
    # API –∫–ª—é—á –º–æ–∂–Ω–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å: SDK –≤–æ–∑—å–º–µ—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENAI_API_KEY
    api_key = arguments.get("openai_api_key")
    model = arguments.get("model", "sora-2")
    
    # –ó–∞—â–∏—Ç–∞ –±—é–¥–∂–µ—Ç–∞: –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –º–∞–∫—Å–∏–º—É–º 3 —Å–µ–∫—É–Ω–¥–∞–º–∏
    duration = arguments.get("duration_seconds")
    if duration is not None:
        if duration > 1:
            print(f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ó–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {duration} —Å–µ–∫. –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (3 —Å–µ–∫.). –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 3 —Å–µ–∫.")
            duration = 1
        elif duration < 1:
            raise ValueError("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã.")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç (—É—á–∏—Ç—ã–≤–∞–µ–º ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
    organization = arguments.get("openai_organization") or os.getenv("OPENAI_ORG_ID")
    if api_key or organization:
        client = OpenAI(api_key=api_key, organization=organization)
    else:
        client = OpenAI()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å: –º–æ–¥–µ–ª—å + –ø—Ä–æ–º–ø—Ç + –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞)
    # –ü–∞—Ä–∞–º–µ—Ç—Ä duration –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ 5 —Å–µ–∫. –¥–ª—è –∑–∞—â–∏—Ç—ã –±—é–¥–∂–µ—Ç–∞
    try:
        create_params = {
            "model": model,
            "prompt": prompt,
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º duration —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω –∏ –≤–∞–ª–∏–¥–µ–Ω
        if duration is not None:
            create_params["duration"] = duration
        
        video_job = client.videos.create(**create_params)
    except PermissionDeniedError as e:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ 403 –¥–ª—è –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        error_message = str(e).lower()
        
        if "unsupported_country" in error_message or "country, region, or territory not supported" in error_message:
            raise RuntimeError(
                "‚ùå Sora 2 API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ/—Ä–µ–≥–∏–æ–Ω–µ.\n"
                "API Sora 2 –∏–º–µ–µ—Ç –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ.\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–∞ https://platform.openai.com/docs/guides/video-generation"
            ) from e
        elif "organization" in error_message or "verify" in error_message:
            raise RuntimeError(
                "–î–æ—Å—Ç—É–ø –∫ –º–æ–¥–µ–ª–∏ –æ—Ç–∫–ª–æ–Ω—ë–Ω (403). –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –Ω–∞ https://platform.openai.com/settings/organization/general, "
                "—É–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥–µ–ª–∏ `sora-2`, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–∫–∞–∂–∏—Ç–µ OPENAI_ORG_ID –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ 15 –º–∏–Ω—É—Ç."
            ) from e
        else:
            # –û–±—â–∞—è –æ—à–∏–±–∫–∞ 403
            raise RuntimeError(
                f"–î–æ—Å—Ç—É–ø –∫ –º–æ–¥–µ–ª–∏ –æ—Ç–∫–ª–æ–Ω—ë–Ω (403): {str(e)}\n"
                "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                "1. API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Sora 2\n"
                "2. –í–∞—à–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞\n"
                "3. Sora 2 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ\n"
                "4. –ù–µ —É–∫–∞–∑–∞–Ω OPENAI_ORG_ID (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)"
            ) from e
    except Exception as e:
        # –ë—Ä–æ—Å–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –æ—à–∏–±–∫—É –≤–≤–µ—Ä—Ö –ø–æ —Å—Ç–µ–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏—á–∏–Ω—É
        raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: {e}") from e

    # Sora 2 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é - –∑–∞–¥–∞—á–∞ —Å–Ω–∞—á–∞–ª–∞ –≤ –æ—á–µ—Ä–µ–¥–∏ (queued)
    # –ù—É–∂–Ω–æ –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å, –ø–æ–∫–∞ –≤–∏–¥–µ–æ –Ω–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ
    video_id = video_job.id
    status = video_job.status
    
    print(f"üìπ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–∞. ID: {video_id}")
    print(f"üìã –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status}")
    
    # –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤ –æ—á–µ—Ä–µ–¥–∏ –∏–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –æ–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    import time
    max_wait_time = 300  # –ú–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è
    check_interval = 5  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    elapsed_time = 0
    
    while status in ['queued', 'processing', 'in_progress']:
        if elapsed_time >= max_wait_time:
            raise RuntimeError(
                f"‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ ({max_wait_time} —Å–µ–∫).\n"
                f"ID –∑–∞–¥–∞—á–∏: {video_id}\n"
                f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status}\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑: client.videos.retrieve('{video_id}')"
            )
        
        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏... –°—Ç–∞—Ç—É—Å: {status}, –ü—Ä–æ—à–ª–æ: {elapsed_time} —Å–µ–∫.")
        time.sleep(check_interval)
        elapsed_time += check_interval
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        try:
            video_job = client.videos.retrieve(video_id)
            status = video_job.status
            
            if hasattr(video_job, 'progress'):
                print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {video_job.progress}%")
            
            if hasattr(video_job, 'error') and video_job.error:
                raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: {video_job.error}")
        except Exception as retrieve_error:
            raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏: {retrieve_error}") from retrieve_error
    
    # –ö–æ–≥–¥–∞ —Å—Ç–∞—Ç—É—Å 'completed', –ø–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ download_content —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    if status == 'completed':
        print(f"‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –≤–∏–¥–µ–æ —Å–Ω–∞—á–∞–ª–∞
        try:
            video = client.videos.retrieve(video_id)
            print(f"üîç –ü–æ–ª—É—á–µ–Ω –æ–±—ä–µ–∫—Ç –≤–∏–¥–µ–æ: ID={video.id}, –°—Ç–∞—Ç—É—Å={video.status}")
        except Exception as e:
            raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –≤–∏–¥–µ–æ: {e}") from e
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ download_content —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ OpenAI
        # content = openai.videos.download_content(video.id, variant="video")
        try:
            print(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ download_content...")
            content = client.videos.download_content(video.id, variant="video")
            print(f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —á–µ—Ä–µ–∑ download_content")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            print(f"üîç –¢–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {type(content)}")
            print(f"üîç –†–∞–∑–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {len(content) if hasattr(content, '__len__') else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç")
            
            # –ï—Å–ª–∏ —ç—Ç–æ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ video URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
            video_url = None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –æ–±—ä–µ–∫—Ç–∞ video –Ω–∞ –Ω–∞–ª–∏—á–∏–µ URL
            if hasattr(video, 'url'):
                video_url = video.url
                print(f"üîç –ù–∞–π–¥–µ–Ω URL –≤ –æ–±—ä–µ–∫—Ç–µ video: {video_url}")
            elif hasattr(video, 'file_url'):
                video_url = video.file_url
                print(f"üîç –ù–∞–π–¥–µ–Ω file_url –≤ –æ–±—ä–µ–∫—Ç–µ video: {video_url}")
            elif hasattr(video, 'download_url'):
                video_url = video.download_url
                print(f"üîç –ù–∞–π–¥–µ–Ω download_url –≤ –æ–±—ä–µ–∫—Ç–µ video: {video_url}")
            else:
                # –ï—Å–ª–∏ URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API endpoint
                video_url = f"https://api.openai.com/v1/videos/{video_id}/content"
                print(f"‚ÑπÔ∏è URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–±—ä–µ–∫—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º API endpoint: {video_url}")
            
            # –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–±—ä–µ–∫—Ç–∞ video –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            try:
                if hasattr(video, 'model_dump'):
                    video_dict = video.model_dump()
                    print(f"üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—ä–µ–∫—Ç–∞ video: {video_dict}")
            except Exception as debug_e:
                print(f"üîç –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É: {debug_e}")
            
            print(f"‚úÖ URL –≤–∏–¥–µ–æ: {video_url}")
            return video_url
            
        except Exception as download_error:
            raise RuntimeError(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ download_content: {download_error}\n"
                f"ID –≤–∏–¥–µ–æ: {video_id}\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑: client.videos.retrieve('{video_id}')"
            ) from download_error
    else:
        raise RuntimeError(
            f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏: {status}\n"
            f"ID –∑–∞–¥–∞—á–∏: {video_id}\n"
            f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑: client.videos.retrieve('{video_id}')"
        )